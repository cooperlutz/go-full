# https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax

# Release workflow for pushes to main branch.
name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:

      - name: Setup / Check out code 
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup / pnpm for frontend build
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup / Install frontend dependencies
        run: pnpm install
        working-directory: ./api/frontend

      - name: Setup / Build frontend
        run: pnpm run build
        working-directory: ./api/frontend

      - name: Setup / Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 1.25.3
          check-latest: true

      - name: Setup / Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Setup / Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Bump version & generate changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          push: false
          
        # this step is necessary to ensure that the git tag and changelog created by commitizen is pushed to the remote repository
      - name: Push using ssh
        run: |
          git push origin main --tags

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a #v6.4
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish / Upload dist
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: dist
          path: dist
