/* tslint:disable */
/* eslint-disable */
/**
 * PingPong
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { PingPong } from "../models/index";
import { PingPongFromJSON, PingPongToJSON } from "../models/index";

export interface PingPongRequest {
  pingPong: PingPong;
}

/**
 * PingpongApi - interface
 *
 * @export
 * @interface PingpongApiInterface
 */
export interface PingpongApiInterface {
  /**
   * Post a PingPong message
   * @summary Pong
   * @param {PingPong} pingPong Pong payload
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof PingpongApiInterface
   */
  pingPongRaw(
    requestParameters: PingPongRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<PingPong>>;

  /**
   * Post a PingPong message
   * Pong
   */
  pingPong(
    requestParameters: PingPongRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<PingPong>;
}

/**
 *
 */
export class PingpongApi
  extends runtime.BaseAPI
  implements PingpongApiInterface
{
  /**
   * Post a PingPong message
   * Pong
   */
  async pingPongRaw(
    requestParameters: PingPongRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<PingPong>> {
    if (requestParameters["pingPong"] == null) {
      throw new runtime.RequiredError(
        "pingPong",
        'Required parameter "pingPong" was null or undefined when calling pingPong().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    let urlPath = `/ping-pongs`;

    const response = await this.request(
      {
        path: urlPath,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: PingPongToJSON(requestParameters["pingPong"]),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      PingPongFromJSON(jsonValue),
    );
  }

  /**
   * Post a PingPong message
   * Pong
   */
  async pingPong(
    requestParameters: PingPongRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<PingPong> {
    const response = await this.pingPongRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
